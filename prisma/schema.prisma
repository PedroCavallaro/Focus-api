// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id         String   @id @default(uuid())
  email      String   @unique
  password   String
  created_at DateTime @default(now())
  userId     String
  user       User     @relation(fields: [userId], references: [id])
}

model User {
  id        String    @id @default(uuid())
  name      String
  image_url String?
  account   Account[]
  workout   Workout[]
}

model Workout {
  id          String        @id @default(uuid())
  name        String
  day         Int
  user        User          @relation(fields: [userId], references: [id])
  userId      String
  workoutItem WorkoutItem[]
}

model WorkoutItem {
  id         String   @id @default(uuid())
  set_number Int
  reps       Int
  weight     Float
  workout    Workout  @relation(fields: [workoutId], references: [id])
  workoutId  String
  exercise   Exercise @relation(fields: [exerciseId], references: [id])
  exerciseId String
}

model Exercise {
  id          String        @id @default(uuid())
  name        String
  description String
  gif_url     String
  workoutItem WorkoutItem[]
  muscle      Muscle        @relation(fields: [muscleId], references: [id])
  muscleId    String
}

model Muscle {
  id          String     @id @default(uuid())
  name        String
  picture_url String
  exercise    Exercise[]
}

model Logs {
  id          String   @id @default(uuid())
  message     String
  requestorId String
  timestamp   DateTime
  operation   String?
}
